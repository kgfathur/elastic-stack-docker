input {
  file {
    path => "/data/log/a-mule.log"
    start_position => "beginning"
    type => "prox"
    codec => multiline {
      pattern => "^%{LOGLEVEL}+%{SPACE}%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  grok {
    match => { "message" => "%{LOGLEVEL:lv}+%{SPACE}%{TIMESTAMP_ISO8601:ts} %{GREEDYDATA:wk}\.worker\.%{DATA:id}] %{NOTSPACE:app}: ((\n%{DATA:key} ('(?<mtd>\\.|[^\\']+)+')%{GREEDYDATA})((\s:\s%{GREEDYDATA:url})|(\s->\s%{GREEDYDATA:js}))|(==+ %{DATA:proc} %{GREEDYDATA}==+)|((%{DATA:key} (Object|%{DATA:mtd})|%{DATA:key})\s:\s%{GREEDYDATA:js})|(%{GREEDYDATA:obj}))" }
  }
  date {
    match => [ "ts", "ISO8601" ]
  }
  if [key] == 'REQUEST' or [key] == 'RESPONSE' {
    mutate {
        remove_field => [ "data" ]
    }
  } else if [key] == 'Response' {
    if [mtd] == 'Akhir' {
      
    }
    else if [mtd] == 'GET' {

    }
    else if [mtd] == 'POST' {

    }
    json {
        source => "data"
    }
  } else if [key] == 'Json' {
    json {
        source => "data"
    }
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => [ "https://192.168.1.246:9200", "https://192.168.1.247:9200", "https://192.168.1.248:9200" ]
    user => "${ELASTIC_USERNAME}"
    password => "${ELASTIC_PASSWORD}"
    index => "a-msmile-01"
    ssl => true
    cacert => '/certs/ca/ca.crt'
  }
}