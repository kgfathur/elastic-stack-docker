input {
    # beats {
    #     port => 5044
    #     # https://www.elastic.co/blog/configuring-ssl-tls-and-https-to-secure-elasticsearch-kibana-beats-and-logstash#prepare-logstash    
    #     # ssl => true
    #     # ssl_key => '/etc/logstash/config/certs/logstash.pkcs8.key'
    #     # ssl_certificate => '/etc/logstash/config/certs/logstash.crt'

    #     # https://www.elastic.co/guide/en/beats/filebeat/current/configuring-ssl-logstash.html
    #     # ssl_verify_mode => "force_peer"
    # }
    file {
        path => "/data/log/mule.log"
        start_position => "beginning"
    }
    # tcp {
    #     port => 5000
    #     type => syslog
    # }
    # udp {
    #     port => 5000
    #     type => syslog
    # }
}

filter {
    grok {
        match => { "message" => [ "%{GREEDYDATA:del1}.worker.%{DATA:id}] %{GREEDYDATA:del2}== %{DATA:key} %{GREEDYDATA:del4}",
            "%{GREEDYDATA:del1}dest_acct%{DATA:del2}%{USER:account}%{GREEDYDATA:del3}",
            "^Sending%{GREEDYDATA:del1} : %{DATA:url}/[a-zA-Z]%{GREEDYDATA:del2}AccCredit=%{INT:account}%{GREEDYDATA:del3}",
            "%{GREEDYDATA:del1}\[\[%{DATA:trx}\]%{GREEDYDATA:del2}.worker.%{DATA:id}] %{GREEDYDATA:del7}: %{DATA:respon} : %{DATA:del3}RC%{DATA:del4}:%{DATA:del5}%{USER:code}%{DATA:del6},%{GREEDYDATA:msg}}" ] }
    }

}

output {
    elasticsearch {
        hosts => [ "https://192.168.1.71:9200", "https://192.168.1.72:9200", "https://192.168.1.78:9200" ]
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        index => "amule1"
        ssl => true
        cacert => '/certs/ca/ca.crt'
    }
}