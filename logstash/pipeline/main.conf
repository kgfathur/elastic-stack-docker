input {
    # beats {
    #     port => 5044
    #     # https://www.elastic.co/blog/configuring-ssl-tls-and-https-to-secure-elasticsearch-kibana-beats-and-logstash#prepare-logstash    
    #     # ssl => true
    #     # ssl_key => '/etc/logstash/config/certs/logstash.pkcs8.key'
    #     # ssl_certificate => '/etc/logstash/config/certs/logstash.crt'

    #     # https://www.elastic.co/guide/en/beats/filebeat/current/configuring-ssl-logstash.html
    #     # ssl_verify_mode => "force_peer"
    # }
    file {
        path => "/data/log/mule.log"
        start_position => "beginning"
    }
    # tcp {
    #     port => 5000
    #     type => syslog
    # }
    # udp {
    #     port => 5000
    #     type => syslog
    # }
}

filter {
    grok {
        match => { "message" => [ "%{GREEDYDATA:del1}.worker.%{DATA:id}] %{GREEDYDATA:del1}== %{DATA:key} %{GREEDYDATA:del1}",
            "%{GREEDYDATA:del1}.worker.%{DATA:id}] %{GREEDYDATA:del1}dest_acct%{DATA:del1}%{USER:account}%{GREEDYDATA:del1}",
            "^Sending%{GREEDYDATA:del1} : %{DATA:url}/[a-zA-Z]%{GREEDYDATA:del1}AccCredit=%{INT:account}%{GREEDYDATA:del1}",
            "%{GREEDYDATA:del1}\[\[%{DATA:trx}\]%{GREEDYDATA:del1}.worker.%{DATA:id}] %{GREEDYDATA:del1}: %{DATA:respon} : %{DATA:del1}RC%{DATA:del1}:%{DATA:del1}%{USER:code}%{DATA:del1},%{GREEDYDATA:msg}}" ] }
    }
    date {
        match => [ "logdate", "yyyy-MM-dd HH:mm:ss,SSS" ]
        add_field => { "date" => "%{logdate}" }
    }

    if "_grokparsefailure" in [tags] {
         drop { }
    } else {
         mutate {
            add_field => { "var" => "not_empty" }
        }
    }

}

output {
    elasticsearch {
        hosts => [ "https://192.168.1.246:9200", "https://192.168.1.247:9200", "https://192.168.1.248:9200" ]
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        index => "amule1"
        ssl => true
        cacert => '/certs/ca/ca.crt'
    }
}