input {
  file {
    path => "/data/log/a-mule.log"
    start_position => "beginning"
    type => "smile"
    codec => multiline {
      pattern => "^%{LOGLEVEL}+%{SPACE}%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  grok {
    match => { "message" => "%{LOGLEVEL:lv}+%{SPACE}%{TIMESTAMP_ISO8601:ts} %{GREEDYDATA:wk}\.worker\.%{DATA:id}] %{NOTSPACE:app}: ((\n%{DATA:key} ('(?<mtd>\\.|[^\\']+)+')%{GREEDYDATA})((\s:\s%{GREEDYDATA:url})|(\s->\s%{GREEDYDATA:msg}))|(==+ %{DATA:proc} %{GREEDYDATA}==+)|((%{DATA:key} (Object|%{DATA:mtd})|%{DATA:key})\s:\s%{GREEDYDATA:msg})|(%{GREEDYDATA:obj}))" }
  }
  date {
    match => [ "ts", "ISO8601" ]
    timezone => "Asia/Jakarta"
    remove_field => [ "ts" ]
  }
  if [key] == 'REQUEST' or [key] == 'RESPONSE' {
    # mutate {
    #     remove_field => [ "js" ]
    # }
    drop {}
  } else if [key] == 'Response' {
    json {
      source => "msg"
      target => "js"
      remove_field => "msg"
    }
    if [mtd] == 'Akhir' {
      mutate {
        add_field => {
          "RC" => "%{[js][RC]}"
          "dalias" => "%{[js][data][alias_dest]}"
          "key_no" => "%{[js][data][key_no]}"
          "RCDesc" => "%{[js][RCDesc]}"
        }
      }
      # "flag_type" => "%{[js][data][flag_type]}"
    }
    else if [mtd] == 'GET' {
      if [js][Result] {
        mutate {
          # remove_field => [ "[Data][Time]", "[Data][Date]",  "[Data][DE44]", "[Data][DE37]", "[Data][DE48][DestName]", "[Data][DE48][AmountList]", "[Data][DE48][CurrencyCode]" ]
          add_field => { 
            "debug" => "Res: toPCE"
          }
          copy => {
            "[js][Result]" => "result"
            "[js][Data][additionalData]" => "info"
            "[js][Data][Response]" => "Response"
            "[js][Data][TraceNum]" => "TraceNum"
            "[js][Data][DE48][AccNo]" => "acct"
          }
        }
      } else {  # Response GCN
        mutate {
          # add_field => { "debug" => "Result false" }
          # remove_field => [ "cfcif#", "kode_akses", "SCCODE", "actype", "CFINSC", "DDCTYP", "typecard", "cfbir6", "cfsnme", "source", "cfssno", "mom_name", "sts", "branch_cif" ]
          add_field => {
            "debug" => "Res: GCN"
          }
          copy => {
            "[js][gcn_number]" => "gcn"
            "[js][account]" => "acct"
            "[js][error]" => "error"
          }
        }
      }
    }
    else if [mtd] == 'POST' {
      mutate {
        add_field => {
          "debug" => "Res: POST"
        }
        copy => {
          "[js][Status]" => "Status"
          "[js][RC]" => "RC"
          "[js][RCDesc]" => "RCDesc"
        }
      }
    }
    
  } else if [key] == 'Json' {
    json {
      source => "msg"
      target => "js"
      remove_field => "msg"
    }
    mutate {
      copy => {
        "[js][alias]" => "alias"
        "[js][gcn_number]" => "gcn"
        "[js][account]" => "acct"
        "[js][dest_acct]" => "dacct"
        "[js][alias_dest]" => "dalias"
        "[js][key_no]" => "key_no"
      }
    }
    # json {
    #     source => "msg"
    #     target => "js"
    #     # remove_field => [ "[js][amount]", "[js][berita]", "[js][DeviceInfo]", "[js][Latlon]", "[js][SimInfo]" ]
    # }
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => [ "https://es01:9200" ]
    user => "${ELASTIC_USERNAME}"
    password => "${ELASTIC_PASSWORD}"
    index => "a-mule-01"
    ssl => true
    cacert => '/certs/ca/ca.crt'
  }
}