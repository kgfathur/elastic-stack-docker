input {
  file {
    path => "/data/log/a-mule.log"
    start_position => "beginning"
    type => "smile"
    codec => multiline {
      pattern => "^%{LOGLEVEL}+%{SPACE}%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  grok {
    match => { "message" => "%{LOGLEVEL:lv}+%{SPACE}%{TIMESTAMP_ISO8601:ts} %{GREEDYDATA:wk}\.worker\.%{DATA:id}] %{NOTSPACE:app}: ((\n%{DATA:key} ('(?<mtd>\\.|[^\\']+)+')%{GREEDYDATA})((\s:\s%{GREEDYDATA:url}\?%{GREEDYDATA:pars})|(\s->\s%{GREEDYDATA:msg}))|(==+ %{DATA:proc} %{GREEDYDATA}==+)|((%{DATA:key} (Object|%{DATA:mtd})|%{DATA:key})\s:\s%{GREEDYDATA:msg})|(%{GREEDYDATA:obj}))" }
  }
  date {
    match => [ "ts", "ISO8601" ]
    timezone => "Asia/Jakarta"
    remove_field => [ "ts" ]
  }
  if [key] == 'Response' {
    json {
      source => "msg"
      target => "js"
    }
    if [mtd] == 'Akhir' {
      mutate {
        copy => {
          "[js][RC]" => "RC"
          "[js][data][alias_dest]" => "dalias"
          "[js][data][key_no]" => "key_no"
          "[js][data][flag_type]" => "flag_type"
          "[js][RCDesc]" => "RCDesc"
        }
        remove_field => [ "msg", "js" ]
      }
    }
    else if [mtd] == 'GET' {
      if [js][Result] {
        mutate {
          add_field => { 
            "debug" => "Res: toPCE"
          }
          copy => {
            "[js][Result]" => "result"
            "[js][Data][additionalData]" => "info"
            "[js][Data][Response]" => "Response"
            "[js][Data][TraceNum]" => "TraceNum"
            "[js][Data][DE48][AccNo]" => "acc"
          }
          remove_field => [ "msg", "js" ]
        }
      } else {  # Response GCN
        mutate {
          add_field => {
            "debug" => "Res: GCN"
          }
          copy => {
            "[js][gcn_number]" => "gcn"
            "[js][account]" => "acc"
            "[js][error]" => "error"
          }
          remove_field => [ "msg", "js" ]
        }
      }
    }
    else if [mtd] == 'POST' {
      mutate {
        add_field => {
          "debug" => "Res: POST"
        }
        copy => {
          "[js][Status]" => "Status"
          "[js][RC]" => "RC"
          "[js][RCDesc]" => "RCDesc"
        }
        remove_field => [ "msg", "js" ]
      }
    }
    
  } else if [key] == 'Sending' {
    if [mtd] == 'GET' {
      kv {
        source => "pars"
        field_split => "&"
        target => "par"
      }
      if [par][token] {
        mutate {
          add_field => { "debug" => "URL GCN" }
          copy => {
            "[par][gcn_number]" => "gcn"
            "[par][account]" => "dacc"
          }
          remove_field => [ "msg", "js", "pars", "par" ]
        }
      } else {
        mutate {
          add_field => { "debug" => "URL PCE" }
          copy => {
            "[par][AccCredit]" => "dacc"
            "[par][AccDebit]" => "acc"
            "[par][TerminalID]" => "TerminalID"
            "[par][TraceNum]" => "TraceNum"
            "[par][Operation]" => "oper"
          }
          remove_field => [ "msg", "js", "pars", "par" ]
        }
      }
    } else if [mtd] == 'POST' {
      json {
        source => "msg"
        target => "js"
      }
      mutate {
        copy => {
          "[js][type_trx]" => "type_trx"
          "[js][alias]" => "alias"
        }
        remove_field => [ "msg", "js" ]
      }
    }
  } else if [key] == 'Json' {
    json {
      source => "msg"
      target => "js"
    }
    mutate {
      copy => {
        "[js][gcn_number]" => "gcn"
        "[js][account]" => "acc"
        "[js][alias]" => "alias"
        "[js][dest_acct]" => "dacc"
        "[js][alias_dest]" => "dalias"
        "[js][key_no]" => "key_no"
      }
      remove_field => [ "msg", "js" ]
    }
  } else if [key] == 'GCN' {
    mutate {
      copy => {
        "msg" => "gcn"
      }
      remove_field => [ "msg" ]
    }
  } else if [key] == 'KEY' {
    mutate {
      copy => {
        "msg" => "key_no"
      }
      remove_field => [ "msg" ]
    }
  } else if [key] == 'REQUEST' or [key] == 'RESPONSE' {
    drop {}
  }
  # aggregate {
  #   task_id => "%{id}"
  #   code => "
  #     map['cnt'] ||= 0
  #     map['cnt'] += 1
  #     map['msg'] ||= ''
  #     map['msg'] += event.get('message')
  #     map['p_ip'] = event.get('ip')
  #     map['p_whip'] = event.get('whip')
  #     event.set('cnt', map['cnt'])
  #     "
  # }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => [ "https://es01:9200" ]
    user => "${ELASTIC_USERNAME}"
    password => "${ELASTIC_PASSWORD}"
    index => "a-mule-01"
    ssl => true
    cacert => '/certs/ca/ca.crt'
  }
}